/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-unless-interrupted";
    // tapping_term_ms = <50>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp E  &kp R      &kp T       &kp Y        &kp U    &kp I      &kp O            &kp P
&kp A       &kp S       &kp D  &lt 4 F    &kp G       &kp H        &lt 4 J  &kp K      &kp L            &kp APOS
&mt LCMD Z  &mt LALT X  &kp C  &kp V      &kp B       &kp N        &kp M    &kp COMMA  &mt RALT PERIOD  &mt RCMD SLASH
                               &sk LSHFT  &lt 1 BSPC  &lt 2 SPACE  &mo 3
            >;
        };

        left_layer {
            bindings = <
&kp KP_DIVIDE    &kp N7  &kp N8  &kp N9  &kp KP_MINUS  &none      &none     &kp UP_ARROW  &none       &none
&kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp KP_PLUS   &none      &kp LEFT  &kp DOWN      &kp RIGHT   &none
&kp NUMBER_0     &kp N1  &kp N2  &kp N3  &kp EQUAL     &none      &none     &kp COMMA     &kp PERIOD  &none
                                 &none   &trans        &kp SPACE  &none
            >;
        };

        right_layer {
            bindings = <
&kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACE  &kp RIGHT_BRACE  &none     &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp EXCL       &kp AT            &kp HASH        &kp DOLLAR       &none     &kp EQUAL  &kp PERCENT       &kp CARET          &kp AMPERSAND         &kp ASTRK
&kp GRAVE      &kp TILDE         &none           &kp UNDER        &none     &none      &kp SEMI          &kp COLON          &kp PIPE              &kp BSLH
                                                 &sk LSHFT        &kp BSPC  &kp SPACE  &none
            >;
        };

        tri_layer {
            bindings = <
&kp F9       &kp F10      &kp F11       &kp F12         &kp NUM_5  &trans     &none           &kp UP_ARROW    &none            &none
&kp F5       &kp F6       &kp F7        &kp F8          &none      &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&mt LCMD F1  &mt LALT F2  &mt LCTRL F3  &kp F4          &none      &trans     &none           &none           &trans           &trans
                                        &sk LEFT_SHIFT  &kp BSPC   &kp SPACE  &trans
            >;
        };

        cmd_layer {
            bindings = <
&kp ESC       &trans        &trans     &trans  &trans     &trans     &trans  &trans     &trans         &none
&kp TAB       &none         &none      &trans  &trans     &trans     &trans  &none      &none          &kp DELETE
&sk LEFT_ALT  &sk LEFT_GUI  &sk LCTRL  &trans  &trans     &trans     &trans  &sk RCTRL  &sk RIGHT_GUI  &sk RIGHT_ALT
                                       &none   &kp ENTER  &kp ENTER  &trans
            >;
        };
    };
};
